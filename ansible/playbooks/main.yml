---

- hosts: all
  roles:
    - { role: general-el8, become: true }
    
- hosts: db_hosts
  roles:
    - { role: postgresql, become: true }

- hosts: iscsi_hosts
  roles:
   - { role: iscsi, become: true }

- hosts: backend_hosts
  roles:
    - { role: iscsi-target, become: true }
    - { role: pcs, become: true }
    - { role: gfs2, become: true }

- hosts: backend_hosts[0]
  become: true
  tasks:
    - name: set pv and vg on gfs0
      lvg:
        vg: vg_gfs2
        pvs: /dev/sda
        vg_options: '--shared'

- hosts: backend_hosts[1:]
  become: true
  tasks:
    - name: change vg on other gfs nodes
      command: vgchange --lock-start vg_gfs2

- hosts: backend_hosts[0]
  become: true
  tasks:
    - name: create lv on gfs0
      lvol:
        vg: vg_gfs2
        size: 100%FREE
        lv: lv_gfs2
        opts: '--activate sy'

- hosts: backend_hosts[0]
  become: true
  tasks:
    - name: mkfs.gfs2
      shell: |
        echo "y" | mkfs.gfs2 -j3 -p lock_dlm -t gfs2_cluster:lv_gfs2 /dev/vg_gfs2/lv_gfs2
        
    - name: set pcs resources
      shell: |
        pcs resource create shared_lv ocf:heartbeat:LVM-activate lvname=lv_gfs2 vgname=vg_gfs2 activation_mode=shared vg_access_mode=lvmlockd --group shared_vg
        sleep 20
        pcs resource clone shared_vg interleave=true
        sleep 20
        pcs constraint order start locking-clone then shared_vg-clone
        sleep 20
        pcs constraint colocation add shared_vg-clone with locking-clone
        sleep 20
        pcs resource create shared_fs ocf:heartbeat:Filesystem device=/dev/vg_gfs2/lv_gfs2 directory=/srv/static fstype=gfs2 options=noatime op monitor interval=10s on-fail=ignore --group shared_vg

- hosts: nginx_hosts
  roles: 
    - { role: nginx, become: true }
  
- hosts: backend_hosts
  roles:
    - { role: backend, become: true }